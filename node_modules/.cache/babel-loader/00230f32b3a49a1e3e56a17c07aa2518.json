{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\hsanchez\\\\Documents\\\\ReactForBeginners\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\hsanchez\\\\Documents\\\\ReactForBeginners\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\hsanchez\\\\Documents\\\\ReactForBeginners\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\hsanchez\\\\Documents\\\\ReactForBeginners\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\hsanchez\\\\Documents\\\\ReactForBeginners\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\hsanchez\\\\Documents\\\\ReactForBeginners\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\hsanchez\\\\Documents\\\\ReactForBeginners\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\hsanchez\\\\Documents\\\\ReactForBeginners\\\\catch-of-the-day\\\\src\\\\components\\\\Inventory.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\";\n\nvar Inventory =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Inventory, _React$Component);\n\n  function Inventory() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Inventory);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Inventory)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      uid: null,\n      owner: null\n    };\n\n    _this.authHandler = function _callee(authData) {\n      var store;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(base.fetch(_this.props.storeId, {\n                context: _assertThisInitialized(_this)\n              }));\n\n            case 2:\n              store = _context.sent;\n              console.log(store); // 2. Claim it if there is no owner\n\n              if (store.owner) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(base.post(\"\".concat(_this.props.storeId, \"/owner\"), {\n                data: authData.user.uid\n              }));\n\n            case 7:\n              // 3. Set the state of the inventory component to reflect the current user\n              _this.setState({\n                uid: authData.user.uid,\n                owner: store.owner || authData.user.uid\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.authenticate = function (provider) {\n      var authProvider = new firebase.auth[\"\".concat(provider, \"AuthProvider\")]();\n      firebaseApp.auth().signInWithPopup(authProvider).then(_this.authHandler);\n    };\n\n    _this.logout = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(\"Logging out!\");\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(firebase.auth().signOut());\n\n            case 3:\n              _this.setState({\n                uid: null\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Inventory, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          _this2.authHandler({\n            user: user\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var logout = React.createElement(\"button\", {\n        onClick: this.logout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Log Out!\"); // 1. Check if they are logged in\n\n      if (!this.state.uid) {\n        return React.createElement(Login, {\n          authenticate: this.authenticate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        });\n      } // 2. check if they are not the owner of the store\n\n\n      if (this.state.uid !== this.state.owner) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"Sorry you are not the owner!\"), logout);\n      } // 3. They must be the owner, just render the inventory\n\n\n      return React.createElement(\"div\", {\n        className: \"inventory\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Inventory\"), logout, Object.keys(this.props.fishes).map(function (key) {\n        return React.createElement(EditFishForm, {\n          key: key,\n          index: key,\n          fish: _this3.props.fishes[key],\n          updateFish: _this3.props.updateFish,\n          deleteFish: _this3.props.deleteFish,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        });\n      }), React.createElement(AddFishForm, {\n        addFish: this.props.addFish,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.props.loadSampleFishes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Load Sample Fishes\"));\n    }\n  }]);\n\n  return Inventory;\n}(React.Component);\n\nInventory.propTypes = {\n  fishes: PropTypes.object,\n  updateFish: PropTypes.func,\n  deleteFish: PropTypes.func,\n  loadSampleFishes: PropTypes.func,\n  addFish: PropTypes.func\n};\nexport default Inventory;","map":{"version":3,"sources":["C:/Users/hsanchez/Documents/ReactForBeginners/catch-of-the-day/src/components/Inventory.js"],"names":["React","PropTypes","firebase","AddFishForm","EditFishForm","Login","base","firebaseApp","Inventory","state","uid","owner","authHandler","authData","fetch","props","storeId","context","store","console","log","post","data","user","setState","authenticate","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","Object","keys","fishes","map","key","updateFish","deleteFish","addFish","loadSampleFishes","Component","propTypes","object","func"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport firebase from \"firebase\";\r\nimport AddFishForm from \"./AddFishForm\";\r\nimport EditFishForm from \"./EditFishForm\";\r\nimport Login from \"./Login\";\r\nimport base, { firebaseApp } from \"../base\";\r\n\r\nclass Inventory extends React.Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    updateFish: PropTypes.func,\r\n    deleteFish: PropTypes.func,\r\n    loadSampleFishes: PropTypes.func,\r\n    addFish: PropTypes.func\r\n  };\r\n\r\n  state = {\r\n    uid: null,\r\n    owner: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      if (user) {\r\n        this.authHandler({ user });\r\n      }\r\n    });\r\n  }\r\n\r\n  authHandler = async authData => {\r\n    // 1 .Look up the current store in the firebase database\r\n    const store = await base.fetch(this.props.storeId, { context: this });\r\n    console.log(store);\r\n    // 2. Claim it if there is no owner\r\n    if (!store.owner) {\r\n      // save it as our own\r\n      await base.post(`${this.props.storeId}/owner`, {\r\n        data: authData.user.uid\r\n      });\r\n    }\r\n    // 3. Set the state of the inventory component to reflect the current user\r\n    this.setState({\r\n      uid: authData.user.uid,\r\n      owner: store.owner || authData.user.uid\r\n    });\r\n  };\r\n\r\n  authenticate = provider => {\r\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n    firebaseApp\r\n      .auth()\r\n      .signInWithPopup(authProvider)\r\n      .then(this.authHandler);\r\n  };\r\n\r\n  logout = async () => {\r\n    console.log(\"Logging out!\");\r\n    await firebase.auth().signOut();\r\n    this.setState({ uid: null });\r\n  };\r\n\r\n  render() {\r\n    const logout = <button onClick={this.logout}>Log Out!</button>;\r\n\r\n    // 1. Check if they are logged in\r\n    if (!this.state.uid) {\r\n      return <Login authenticate={this.authenticate} />;\r\n    }\r\n\r\n    // 2. check if they are not the owner of the store\r\n    if (this.state.uid !== this.state.owner) {\r\n      return (\r\n        <div>\r\n          <p>Sorry you are not the owner!</p>\r\n          {logout}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // 3. They must be the owner, just render the inventory\r\n    return (\r\n      <div className=\"inventory\">\r\n        <h2>Inventory</h2>\r\n        {logout}\r\n        {Object.keys(this.props.fishes).map(key => (\r\n          <EditFishForm\r\n            key={key}\r\n            index={key}\r\n            fish={this.props.fishes[key]}\r\n            updateFish={this.props.updateFish}\r\n            deleteFish={this.props.deleteFish}\r\n          />\r\n        ))}\r\n        <AddFishForm addFish={this.props.addFish} />\r\n        <button onClick={this.props.loadSampleFishes}>\r\n          Load Sample Fishes\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inventory;\r\n"]},"metadata":{},"sourceType":"module"}